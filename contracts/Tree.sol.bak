// SPDX-License-Identifier: MIT

pragma solidity ^0.8.7;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/Strings.sol";

contract Tree is ERC1155, Ownable {
    struct ITree {
        uint level;
        string color;
        string shape;
        bool isPlanted;
        uint maxLevel;
        uint exp;
        uint berryAmount;
    }

    string metadataURI;
    mapping(uint => ITree) trees;

    constructor() ERC1155("") {}

    function mintTree(uint _tokenId, uint _amount) public onlyOwner {
        _mint(msg.sender, _tokenId, _amount, "");
    }

    function setUri(string memory _metadatURI) public onlyOwner {
        metadataURI = _metadatURI;
    }

    function uri(uint _tokenId) public override view returns(string memory) {
        return string(abi.encodePacked(metadataURI, '/', Strings.toString(_tokenId),'.json'));
    }
}
